# -*- coding: utf-8 -*-
"""exploratory data analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10YSkVBQPe9_PpEw5vPyReCa_nZPCW1-T
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_excel('/content/samplebankloandata.xlsx')
print(df.head())

print (df.dtypes)

print(df.isnull().sum())

print(df.describe())

sns.histplot(data=df, x='loan_amount', kde=True)
plt.title('Distribution of loan_amount')
plt.show()

sns.countplot(data=df, x='home_ownership')
plt.xticks(rotation=90)
plt.title('Home Ownership Count by Type')
plt.show()

sns.countplot(data=df, x='grade')
plt.xticks(rotation=1)
plt.title('Grade by amount')
plt.show()

sns.barplot(data=df,x='purpose',y='loan_amount',estimator=np.mean)
plt.xticks(rotation=90)
plt.title('loan_amount by purpose')
plt.show()

plt.pie(df['region'].value_counts(), labels=df['region'].value_counts().index, autopct='%1.1f%%')
plt.title('People Distribution over Region')
plt.show()

plt.pie(df['grade'].value_counts(), labels=df['grade'].value_counts().index, autopct='%1.1f%%')
plt.title('grade Distribution over loan')
plt.show()

sns.boxplot(data=df, x='loan_condition', y='loan_amount', showfliers=False)
plt.title('loan_amount by loan_condition')
plt.show()

y_column = 'loan_amount'
x_column = 'home_ownership'
sns.boxplot(data=df, x=x_column, y=y_column, showfliers=False)
plt.title(f'{y_column} by {x_column}')
plt.show()

sns.scatterplot(data=df, x='loan_amount', y='annual_inc')
plt.title('Loan Amount vs. Annual Income')
plt.show()

sns.scatterplot(data=df, x='loan_amount', y='installment')
plt.title('Loan Amount vs. Installment')
plt.show()

annual_inc_over_time = df.groupby('year')['annual_inc'].sum()
annual_inc_over_time.plot()
plt.title('Total Annual Income Over Time')
plt.xticks(rotation=90)
plt.show()

variables_of_interest = ['final_d', 'income_cat', 'interest_rate', 'dti']
subset_df = df[variables_of_interest]
corr = subset_df.corr()
sns.heatmap(corr, annot=True, cmap='magma')
plt.title('Correlation Heatmap')
plt.show()

variables_of_interest = ['final_d', 'income_cat', 'interest_rate', 'dti','loan_amount','annual_inc','installment','recoveries']
subset_df = df[variables_of_interest]
corr = subset_df.corr()
sns.heatmap(corr, annot=True, cmap='BuPu')
plt.title('Correlation Heatmap')
plt.show()

import plotly.express as px
fig = px.scatter_3d(df, x='loan_amount', y='interest_rate', z='term',color='purpose')
fig.update_layout(scene=dict(
                    xaxis=dict(title='Loan Amount'),
                    yaxis=dict(title='Interest Rate'),
                    zaxis=dict(title='Loan Term')))
fig.show()

import plotly.express as px
fig = px.scatter_3d(df, x='installment', y='annual_inc', z='term',color='region')
fig.update_layout(scene=dict(
                    xaxis=dict(title='Loan Amount'),
                    yaxis=dict(title='Interest Rate'),
                    zaxis=dict(title='Loan Term')))
fig.show()